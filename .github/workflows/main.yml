name: CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  build-windows:
    name: build-windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 1

      - name: Checkout Submodules
        run: git submodule update --init

      - name: Create QtAccount File
        if: steps.qt-cached.outputs.cache-hit != 'true'
        run: |
          mkdir C:/Users/runneradmin/AppData/Roaming/Qt/
          curl https://raw.githubusercontent.com/fjandrad/development-env/master/Tools/qtaccount.ini --output C:/Users/runneradmin/AppData/Roaming/Qt/qtaccount.ini

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.9.9'
          arch: 'win32_mingw53'
          dir: 'D:'
#           cache: 'true'
#           cache-key-prefix: 'qt-cached'
#           setup-python: 'true'
          tools: 'tools_qtcreator,qt.tools.qtcreator'
          extra: '--external 7z'

      - name: Setup CMake
        run: |
          curl -L https://github.com/Kitware/CMake/releases/download/v3.20.2/cmake-3.20.2-windows-i386.zip -o cmake.zip
          unzip cmake.zip

      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '8'
          architecture: x86

      - name: Setup zlib
        run: |
          mkdir zlib
          cd zlib
          curl -L https://downloads.sourceforge.net/project/gnuwin32/zlib/1.2.3/zlib-1.2.3-bin.zip -o zlib.zip
          curl -L https://downloads.sourceforge.net/project/gnuwin32/zlib/1.2.3/zlib-1.2.3-lib.zip -o zliblibs.zip
          unzip zlib.zip
          unzip zliblibs.zip

      - name: Setup OpenSSL
        run: |
          mkdir OpenSSL
          cd OpenSSL
          curl -L https://github.com/IndySockets/OpenSSL-Binaries/raw/master/Archive/openssl-1.0.2g-i386-win32.zip -o OpenSSL.zip
          unzip OpenSSL.zip

      - name: Build
        shell: cmd
        if: steps.build-cached.outputs.cache-hit != 'true'
        run: |
          set PATH=D:\Qt\5.9.9\mingw53_32\bin;D:\Qt\Tools\mingw53_32\bin;
          set PATH=%CD%\zlib;%CD%\zlib\bin;%CD%\zlib\lib;%CD%\zlib\include;%PATH%
          set PATH=%CD%\OpenSSL;%PATH%
          set PATH=C:\hostedtoolcache\windows\Java_Zulu_jdk\8.0.292-10\x86\bin;%PATH%
          set PATH=%CD%\cmake-3.20.2-windows-i386\bin;%PATH%
          set CC=D:\Qt\Tools\mingw53_32\bin\gcc.exe
          set CXX=D:\Qt\Tools\mingw53_32\bin\g++.exe
          mkdir build
          cd build
          copy D:\Qt\Tools\mingw53_32\bin\mingw32-make.exe D:\Qt\Tools\mingw53_32\bin\make.exe
          cmake -DCMAKE_BUILD_TYPE=Release -DMultiMC_NOTIFICATION_URL:STRING=https://files.multimc.org/notifications.json -DCMAKE_INSTALL_PREFIX:PATH="D:/MultiMC-Cracked" -DMultiMC_CHANLIST_URL=https://files.multimc.org/update/win32/channels.json -DMultiMC_PASTE_EE_API_KEY:STRING=utLvciUouSURFzfjPxLBf5W4ISsUX4pwBDF7N1AfZ -DMultiMC_ANALYTICS_ID:STRING=UA-87731965-2 -DMultiMC_LAYOUT=win-bundle -DMultiMC_VERSION_BUILD=2065 -DMultiMC_VERSION_CHANNEL=refs/heads/develop -DMultiMC_BUILD_PLATFORM=win32 -G "MinGW Makefiles" ..

      - name: Compile
        shell: cmd
        run: |
          set PATH=D:\Qt\5.9.9\mingw53_32\bin;D:\Qt\Tools\mingw53_32\bin;
          set PATH=%CD%\zlib;%CD%\zlib\bin;%PATH%
          set PATH=%CD%\OpenSSL;%PATH%
          set PATH=C:\hostedtoolcache\windows\Java_Zulu_jdk\8.0.292-10\x86\bin;%PATH%
          set PATH=%CD%\cmake-3.20.2-windows-i386\bin;%PATH%
          set PATH=C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;%PATH%
          cd build
          mingw32-make tcversion
          mingw32-make -j2

      - name: Test
        shell: cmd
        run: |
          set PATH=D:\Qt\5.9.9\mingw53_32\bin;D:\Qt\Tools\mingw53_32\bin;
          set PATH=%CD%\zlib;%CD%\zlib\bin;%PATH%
          set PATH=%CD%\OpenSSL;%PATH%
          set PATH=C:\hostedtoolcache\windows\Java_Zulu_jdk\8.0.292-10\x86\bin;%PATH%
          set PATH=%CD%\cmake-3.20.2-windows-i386\bin;%PATH%
          set PATH=C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;%PATH%
          cd build
          mingw32-make test
          cmake -E remove_directory "D:/MultiMC-Cracked"

      - name: Install
        shell: cmd
        run: |
          set PATH=D:\Qt\5.9.9\mingw53_32\bin;D:\Qt\Tools\mingw53_32\bin;
          set PATH=%CD%\zlib;%CD%\zlib\bin;%PATH%
          set PATH=%CD%\OpenSSL;%PATH%
          set PATH=C:\hostedtoolcache\windows\Java_Zulu_jdk\8.0.292-10\x86\bin;%PATH%
          set PATH=%CD%\cmake-3.20.2-windows-i386\bin;%PATH%
          set PATH=C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;%PATH%
          cd build
          mingw32-make install

      - name: Copy OpenSSL
        shell: cmd
        run: |
          cp OpenSSL/ssleay32.dll D:/MultiMC-Cracked/ssleay32.dll
          cp OpenSSL/libeay32.dll D:/MultiMC-Cracked/libeay32.dll

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2.2.3
        with:
          name: MultiMC5-Cracked-Portable-win32-${{ github.run_number }}
          path: "D:/MultiMC-Cracked"
